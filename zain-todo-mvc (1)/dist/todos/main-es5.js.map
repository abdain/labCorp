{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/todos/components/complete-all/complete-all.component.ts","webpack:///src/app/todos/components/complete-all/complete-all.component.html","webpack:///src/app/todos/components/todo-list/todo-list.component.ts","webpack:///src/app/todos/components/todo-list/todo-list.component.html","webpack:///src/app/todos/services/todos.service.ts","webpack:///src/app/todos/state/todo.actions.ts","webpack:///src/app/todos/state/todo.selectors.ts","webpack:///src/app/todos/state/todos.reducer.ts","webpack:///src/app/todos/todos.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","todoService","filters","filtersMode$","leftTasks","alltodos","todoForm","task","allTodos$","subscribe","todos","filter","todo","completed","fieldvalue","get","value","addTodo","setValue","clearCompleted","mode","changeFilterMode","onEnteKey","changeDetection","OnPush","selector","templateUrl","AppModule","forRoot","runtimeChecks","strictStateImmutability","strictActionImmutability","production","instrument","maxAge","declarations","imports","providers","bootstrap","CompleteAllComponent","changeDetectorRef","todosService","multipleTodosExist","subscription","length","markForCheck","unsubscribe","toggleAllCompleted","styleUrls","TodosListComponent","tasksList","todos$","i","toggleComplete","text","updateTodo","removeTodo","editTodo","TodosService","store","select","dispatch","toggleCompleted","todosSelector","filtersModes","initialState","filterMode","allTodos","getFilteredTodos","updatedTodos","todosReducer","state","action","existingState","Date","getTime","forEach","splice","editing","DECLARATIONS","TodosModule","forFeature","environment","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,eAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,8BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;ACYE;;AACE;;AAAyB;;AAA+B;;AACxD;;AACE;;AACE;;AAAY;AAAA;;AAAA;;AAAA,iDAAgC,KAAhC;AAAqC,WAArC;;;;AAA4F;;AAAG;;AAC7G;;AACA;;AACE;;AAAY;AAAA;;AAAA;;AAAA,iDAAgC,QAAhC;AAAwC,WAAxC;;;;AAC6C;;AAAM;;AACjE;;AACA;;AACE;;AAAY;AAAA;;AAAA;;AAAA,iDAAgC,WAAhC;AAA2C,WAA3C;;;;AACgD;;AAAS;;AACvE;;AACF;;AACA;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAqD;;AAAe;;AAC9E;;;;;;AAf2B;;AAAA;;AAG+B;;AAAA;;AAIlD;;AAAA;;AAIA;;AAAA;;;;UDfGC,Y;AAKX,8BAAoBC,WAApB,EAA+C;AAAA;;AAA3B,eAAAA,WAAA,GAAAA,WAAA;AAHpB,eAAAC,OAAA,GAAU,KAAKD,WAAL,CAAiBE,YAA3B;AACA,eAAAC,SAAA,GAAY,EAAZ;AACA,eAAAC,QAAA,GAAW,EAAX;AAGC;;;;qCAGO;AAAA;;AACN,iBAAKC,QAAL,GAAgB,IAAI,wDAAJ,CAAc;AAC5BC,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AADsB,aAAd,CAAhB;AAIA,iBAAKN,WAAL,CAAiBO,SAAjB,CAA2BC,SAA3B,CAAqC,UAAAC,KAAK,EAAI;AAC5C,mBAAI,CAACL,QAAL,GAAgBK,KAAhB;AACA,mBAAI,CAACN,SAAL,GAAiBM,KAAK,CAACC,MAAN,CAAa,UAAAC,IAAI;AAAA,uBAAI,CAACA,IAAI,CAACC,SAAV;AAAA,eAAjB,CAAjB;AACD,aAHD;AAID;;;sCAEW;AACV,gBAAMC,UAAU,GAAG,KAAKR,QAAL,CAAcS,GAAd,CAAkB,MAAlB,EAA0BC,KAA7C;;AACA,gBAAIF,UAAJ,EAAgB;AACd,mBAAKb,WAAL,CAAiBgB,OAAjB,CAAyBH,UAAzB;AACA,mBAAKR,QAAL,CAAcS,GAAd,CAAkB,MAAlB,EAA0BG,QAA1B,CAAmC,EAAnC;AACD;AACF;;;6CAEkB;AACjB,iBAAKjB,WAAL,CAAiBkB,cAAjB;AACD;;;yCAEc1B,C,EAAG2B,I,EAAM;AACtB,iBAAKnB,WAAL,CAAiBoB,gBAAjB,CAAkCD,IAAlC;AACD;;;;;;;yBAnCUpB,Y,EAAY,2I;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA,iB;AAAA,e;AAAA,gZ;AAAA;AAAA;ACTzB;;AACE;;AACE;;AAAI;;AAAK;;AACT;;AACE;;AAA+C;AAAA,qBAAe,IAAAsB,SAAA,EAAf;AAA0B,aAA1B;;AAA/C;;AAEF;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AAiBF;;AACA;;AACE;;AAAG;;AAA2B;;AAChC;;;;AA7BU;;AAAA;;AASe;;AAAA;;;;;;;;;;;wEDHZtB,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTuB,2BAAe,EAAE,sEAAwBC,MADhC;AAETC,oBAAQ,EAAE,UAFD;AAGTC,uBAAW,EAAE;AAHJ,W;AAKc,U;;;;;;;;;;;;;;;;;;;;;;AETzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA+BaC,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,E;AAAE,kBAdJ,CACP,uEADO,EAEP,kEAFO,EAGP,wDAAYC,OAAZ,CAAoB,EAApB,EAAwB;AACtBC,uBAAa,EAAE;AACbC,mCAAuB,EAAE,KADZ;AAEbC,oCAAwB,EAAE;AAFb;AADO,SAAxB,CAHO,EASP,CAAC,0EAAYC,UAAb,GAA0B,yEAAoBC,UAApB,CAA+B;AACvDC,gBAAM,EAAE;AAD+C,SAA/B,CAA1B,GAEK,EAXE,EAYP,+DAZO,CAcI;;;;4HAGFP,S,EAAS;AAAA,yBAnBlB,2DAmBkB;AAnBN,oBAGZ,uEAHY,EAIZ,kEAJY,EAIO,2DAJP,EAIO,wEAJP,EAcZ,+DAdY;AAmBM,S;AALP,O;;;;;wEAKFA,S,EAAS;gBArBrB,sDAqBqB;iBArBZ;AACRQ,wBAAY,EAAE,CACZ,2DADY,CADN;AAIRC,mBAAO,EAAE,CACP,uEADO,EAEP,kEAFO,EAGP,wDAAYR,OAAZ,CAAoB,EAApB,EAAwB;AACtBC,2BAAa,EAAE;AACbC,uCAAuB,EAAE,KADZ;AAEbC,wCAAwB,EAAE;AAFb;AADO,aAAxB,CAHO,EASP,CAAC,0EAAYC,UAAb,GAA0B,yEAAoBC,UAApB,CAA+B;AACvDC,oBAAM,EAAE;AAD+C,aAA/B,CAA1B,GAEK,EAXE,EAYP,+DAZO,CAJD;AAkBRG,qBAAS,EAAE,EAlBH;AAmBRC,qBAAS,EAAE,CAAC,2DAAD;AAnBH,W;AAqBY,U;;;;;;;;;;;;;;;;;;AC/BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AACE;;AAA0D;AAAA;;AAAA;;AAAA;AAAA;;AAA1D;;AACA;;AAA8E;;AAAoB;;AACpG;;;;UDUaC,oB;AAKX,sCACUC,iBADV,EAEUC,YAFV,EAEoC;AAAA;;AAD1B,eAAAD,iBAAA,GAAAA,iBAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AALV,eAAAC,kBAAA,GAAqB,KAArB;AAMI;;;;qCAEI;AAAA;;AACN,iBAAKC,YAAL,GAAoB,KAAKF,YAAL,CAAkBjC,SAAlB,CAA4BC,SAA5B,CAAsC,UAAAC,KAAK,EAAI;AACjE,oBAAI,CAACgC,kBAAL,GAA0BhC,KAAK,IAAIA,KAAK,CAACkC,MAAN,GAAe,CAAlD;;AACA,oBAAI,CAACJ,iBAAL,CAAuBK,YAAvB;AACD,aAHmB,CAApB;AAID;;;wCAEU;AACT,gBAAI,KAAKF,YAAT,EAAuB;AACrB,mBAAKA,YAAL,CAAkBG,WAAlB;AACD;AACF;;;8CAEgB;AACf,iBAAKL,YAAL,CAAkBM,kBAAlB;AACD;;;;;;;yBAzBUR,oB,EAAoB,gI,EAAA,+I;AAAA,O;;;cAApBA,oB;AAAoB,yC;AAAA,gB;AAAA,e;AAAA,mL;AAAA;AAAA;ACbjC;;;;AAAc;;;;;;;;;;wEDaDA,oB,EAAoB;gBARhC,uDAQgC;iBARtB;AACThB,2BAAe,EAAE,sEAAwBC,MADhC;AAETC,oBAAQ,EAAE,kBAFD;AAGTuB,qBAAS,EAAE,CACT,+BADS,CAHF;AAMTtB,uBAAW,EAAE;AANJ,W;AAQsB,U;;;;;;;;;;;;;;;;;;;;;;;;AEbjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACCE;;AACE;;AACE;;AAAsB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAtB;;AACA;;AAAO;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAa;;AACjD;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AACrD;;AAEA;;AAAgC;AAAA;;AAAA;AAAA;AAAA,aAAuB,aAAvB,EAAuB;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAAvB;;AAAhC;;AAEF;;;;;;AATuD;;AAEM;;AAAA;;AACrB;;AAAA;;AAIN;;AAAA;;;;UDGvBuB,kB;AACX,oCAAoBR,YAApB,EAAgD;AAAA;;AAA5B,eAAAA,YAAA,GAAAA,YAAA;AAIpB,eAAAS,SAAA,GAAY,KAAKT,YAAL,CAAkBU,MAA9B;AAFC;;;;yCAIcC,C,EAAG;AAChB,iBAAKX,YAAL,CAAkBY,cAAlB,CAAiCD,CAAjC;AACD;;;mCAEQA,C,EAAGE,I,EAAM;AAChB,iBAAKb,YAAL,CAAkBc,UAAlB,CAA6BH,CAA7B,EAAgCE,IAAhC;AACD;;;kCAGOF,C,EAAG;AACT,iBAAKX,YAAL,CAAkBe,UAAlB,CAA6BJ,CAA7B;AACD;;;iCAEMA,C,EAAG;AACR,iBAAKX,YAAL,CAAkBgB,QAAlB,CAA2BL,CAA3B;AACD;;;;;;;yBAtBUH,kB,EAAkB,+I;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,gB;AAAA,e;AAAA,8Q;AAAA;AAAA;ACX/B;;AACE;;;;AAUF;;;;AAVM;;AAAA;;;;;;;;;;;wEDUOA,kB,EAAkB;gBAR9B,uDAQ8B;iBARpB;AACTxB,oBAAQ,EAAE,gBADD;AAETuB,qBAAS,EAAE,CACT,4BADS,CAFF;AAKTtB,uBAAW,EAAE,4BALJ;AAMTH,2BAAe,EAAE,sEAAwBC;AANhC,W;AAQoB,U;;;;;;;;;;;;;;;;;;;;;;AEX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWakC,Y;AAMX,8BACUC,KADV,EACmC;AAAA;;AAAzB,eAAAA,KAAA,GAAAA,KAAA;AAER,eAAKR,MAAL,GAAc,KAAKQ,KAAL,CAAWC,MAAX,CAAkB,2DAAlB,CAAd;AACA,eAAKzD,YAAL,GAAoB,KAAKwD,KAAL,CAAWC,MAAX,CAAkB,kEAAlB,CAApB;AACA,eAAKpD,SAAL,GAAiB,KAAKmD,KAAL,CAAWC,MAAX,CAAkB,8DAAlB,CAAjB;AACD;;;;kCAEON,I,EAAY;AAClB,iBAAKK,KAAL,CAAWE,QAAX,CAAoB,4DAAoB;AAAEP,kBAAI,EAAJA;AAAF,aAApB,CAApB;AACD;;;qCAEUvD,E,EAAU;AACnB,iBAAK4D,KAAL,CAAWE,QAAX,CAAoB,+DAAuB;AAAE9D,gBAAE,EAAFA;AAAF,aAAvB,CAApB;AACD;;;yCAEcA,E,EAAU;AACvB,iBAAK4D,KAAL,CAAWE,QAAX,CAAoB,oEAA4B;AAAE9D,gBAAE,EAAFA;AAAF,aAA5B,CAApB;AACD;;;+CAEiB;AAChB,iBAAK4D,KAAL,CAAWE,QAAX,CAAoB,wEAApB;AACD;;;qCAEU9D,E,EAAYuD,I,EAAY;AACjC,iBAAKK,KAAL,CAAWE,QAAX,CAAoB,+DAAuB;AAAE9D,gBAAE,EAAFA,EAAF;AAAMuD,kBAAI,EAAJA;AAAN,aAAvB,CAApB;AACD;;;mCAEQvD,E,EAAU;AACjB,iBAAK4D,KAAL,CAAWE,QAAX,CAAoB,6DAAqB;AAAE9D,gBAAE,EAAFA;AAAF,aAArB,CAApB;AACD;;;2CAEgBqB,I,EAAkB;AACjC,iBAAKuC,KAAL,CAAWE,QAAX,CAAoB,qEAA6B;AAAEzC,kBAAI,EAAJA;AAAF,aAA7B,CAApB;AACD;;;2CAEa;AACZ,iBAAKuC,KAAL,CAAWE,QAAX,CAAoB,oEAApB;AACD;;;;;;;yBA5CUH,Y,EAAY,yG;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY;;;;;wEAAZA,Y,EAAY;gBADxB;AACwB,U;;;;;;;;;;;;;;;;;;;;;;ACXzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO,UAAMzC,OAAO,GAAG,iEACrB,kBADqB,EAErB,2DAFqB,CAAhB;AAKA,UAAMuC,UAAU,GAAG,iEACxB,qBADwB,EAExB,2DAFwB,CAAnB;AAKA,UAAMC,QAAQ,GAAG,iEACtB,mBADsB,EAEtB,2DAFsB,CAAjB;AAKA,UAAMF,UAAU,GAAG,iEACxB,qBADwB,EAExB,2DAFwB,CAAnB;AAKA,UAAMO,eAAe,GAAG,iEAC7B,0BAD6B,EAE7B,2DAF6B,CAAxB;AAKA,UAAMf,kBAAkB,GAAG,iEAChC,8BADgC,CAA3B;AAIA,UAAM1B,gBAAgB,GAAG,iEAC9B,4BAD8B,EAE9B,2DAF8B,CAAzB;AAKA,UAAMF,cAAc,GAAG,iEAC5B,yBAD4B,CAAvB;;;;;;;;;;;;;;;;ACrCP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO,UAAM4C,aAAa,GAAG,0EAA8C,OAA9C,CAAtB;AACA,UAAMrD,KAAK,GAAG,mEACnBqD,aADmB,EAEnB,oDAFmB,CAAd;AAMA,UAAM1D,QAAQ,GAAG,mEACtB0D,aADsB,EAEtB,uDAFsB,CAAjB;AAMA,UAAMC,YAAY,GAAG,mEAC1BD,aAD0B,EAE1B,yDAF0B,CAArB;;;;;;;;;;;;;;;;AChBP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAYO,UAAME,YAAY,GAAgB;AACvCC,kBAAU,EAAE,KAD2B;AAEvCxD,aAAK,EAAE,EAFgC;AAGvCyD,gBAAQ,EAAE;AAH6B,OAAlC;;AAOP,eAASC,gBAAT,CAA0BC,YAA1B,EAAwCH,UAAxC,EAAoD;AAClD,eAAOA,UAAU,KAAK,KAAf,GAAuBG,YAAvB,GAAsCH,UAAU,KAAK,QAAf,sBACvCG,YAAY,CAAC1D,MAAb,CAAoB,UAAAC,IAAI;AAAA,iBAAI,CAACA,IAAI,CAACC,SAAV;AAAA,SAAxB,CADuC,uBAEvCwD,YAAY,CAAC1D,MAAb,CAAoB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,SAAT;AAAA,SAAxB,CAFuC,CAA7C;AAGD;;AAEM,eAASyD,YAAT,CAAsBC,KAAtB,EAA0CC,MAA1C,EAA0D;AAC/D,eAAO,kEACLP,YADK,EAEL,uDAAG,qDAAH,EAAwB,UAACQ,aAAD,QAA6B;AAAA,cAAXnB,IAAW,QAAXA,IAAW;AACnD,cAAIe,YAAY,IAAI;AAAEf,gBAAI,EAAJA,IAAF;AAAQzC,qBAAS,EAAE,KAAnB;AAA0Bd,cAAE,EAAE,IAAI2E,IAAJ,GAAWC,OAAX;AAA9B,WAAJ,4BAA6DF,aAAa,CAACN,QAA3E,EAAhB;AADmD,cAE7CD,UAF6C,GAE9BO,aAF8B,CAE7CP,UAF6C;AAInD,iBAAO,MAAP,OAAO,CAAP,kBACKO,aADL,CAAO,EACW;AAChB/D,iBAAK,EAAE0D,gBAAgB,CAACC,YAAD,EAAeH,UAAf,CADP;AAEhBC,oBAAQ,EAAEE;AAFM,WADX,CAAP;AAKD,SATD,CAFK,EAcL,uDAAG,wDAAH,EAA2B,UAACI,aAAD,SAA2B;AAAA,cAAT1E,EAAS,SAATA,EAAS;;AACpD,cAAMsE,YAAY,sBAAOI,aAAa,CAACN,QAArB,CAAlB;;AACAE,sBAAY,CAACO,OAAb,CAAqB,UAACrE,IAAD,EAAO6C,CAAP,EAAa;AAChC,gBAAI7C,IAAI,CAACR,EAAL,KAAYA,EAAhB,EAAoB;AAClBsE,0BAAY,CAACQ,MAAb,CAAoBzB,CAApB,EAAuB,CAAvB;AACD;AACF,WAJD;AAFoD,cAO9Cc,UAP8C,GAO/BO,aAP+B,CAO9CP,UAP8C;AAUpD,iBAAO,MAAP,OAAO,CAAP,kBACKO,aADL,CAAO,EACW;AAChB/D,iBAAK,EAAE0D,gBAAgB,CAACC,YAAD,EAAeH,UAAf,CADP;AAEhBC,oBAAQ,EAAEE;AAFM,WADX,CAAP;AAKD,SAfD,CAdK,EA8BL,uDAAG,8DAAH,EAAiC,UAACI,aAAD;AAAA,cAAkBrD,IAAlB,SAAkBA,IAAlB;AAAA,iBAA8B,MAAD,OAAC,CAAD,kBACzDqD,aADyD,CAAC,EAC7C;AAChBP,sBAAU,EAAE9C,IADI;AAEhBV,iBAAK,EAAE0D,gBAAgB,CAACK,aAAa,CAACN,QAAf,EAAyB/C,IAAzB;AAFP,WAD6C,CAA9B;AAAA,SAAjC,CA9BK,EAmCL,uDAAG,6DAAH,EAAgC,UAACqD,aAAD,SAA2B;AAAA,cAAT1E,EAAS,SAATA,EAAS;;AACzD,cAAIsE,YAAY,sBAAOI,aAAa,CAACN,QAArB,CAAhB;;AACAE,sBAAY,CAACO,OAAb,CAAqB,UAAChE,IAAD,EAAOwC,CAAP,EAAa;AAChC,gBAAIrD,EAAE,KAAKa,IAAI,CAACb,EAAhB,EAAoB;AAClBa,kBAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACD;AACF,WAJD;AAFyD,cAOnDqD,UAPmD,GAOpCO,aAPoC,CAOnDP,UAPmD;AAQzD,iBAAO,MAAP,OAAO,CAAP,kBACKO,aADL,CAAO,EACW;AAChB/D,iBAAK,EAAE0D,gBAAgB,CAACC,YAAD,EAAeH,UAAf,CADP;AAEhBC,oBAAQ,EAAEE;AAFM,WADX,CAAP;AAKD,SAbD,CAnCK,EAiDL,uDAAG,sDAAH,EAAyB,UAACI,aAAD,SAA2B;AAAA,cAAT1E,EAAS,SAATA,EAAS;;AAClD,cAAIsE,YAAY,sBAAOI,aAAa,CAACN,QAArB,CAAhB;;AACAE,sBAAY,CAACO,OAAb,CAAqB,UAAChE,IAAD,EAAOwC,CAAP,EAAa;AAChC,gBAAIrD,EAAE,KAAKa,IAAI,CAACb,EAAhB,EAAoB;AAClBa,kBAAI,CAACkE,OAAL,GAAe,IAAf;AACD;AACF,WAJD;AAFkD,cAO5CZ,UAP4C,GAO7BO,aAP6B,CAO5CP,UAP4C;AAQlD,iBAAO,MAAP,OAAO,CAAP,kBACKO,aADL,CAAO,EACW;AAChB/D,iBAAK,EAAE0D,gBAAgB,CAACC,YAAD,EAAeH,UAAf,CADP;AAEhBC,oBAAQ,EAAEE;AAFM,WADX,CAAP;AAKD,SAbD,CAjDK,EA+DL,uDAAG,wDAAH,EAA2B,UAACI,aAAD,SAAiC;AAAA,cAAf1E,EAAe,SAAfA,EAAe;AAAA,cAAXuD,IAAW,SAAXA,IAAW;;AAC1D,cAAIe,YAAY,sBAAOI,aAAa,CAACN,QAArB,CAAhB;;AACAE,sBAAY,CAACO,OAAb,CAAqB,UAAChE,IAAD,EAAOwC,CAAP,EAAa;AAChC,gBAAIrD,EAAE,KAAKa,IAAI,CAACb,EAAhB,EAAoB;AAClB,kBAAIuD,IAAI,KAAK,EAAb,EAAiB;AACfe,4BAAY,CAACQ,MAAb,CAAoBzB,CAApB,EAAuB,CAAvB;AACD,eAFD,MAEO;AACLxC,oBAAI,CAAC0C,IAAL,GAAYA,IAAZ;AACA1C,oBAAI,CAACkE,OAAL,GAAe,KAAf;AACD;AACF;AACF,WATD;AAF0D,cAYpDZ,UAZoD,GAYrCO,aAZqC,CAYpDP,UAZoD;AAc1D,iBAAO,MAAP,OAAO,CAAP,kBACKO,aADL,CAAO,EACW;AAChB/D,iBAAK,EAAE0D,gBAAgB,CAACC,YAAD,EAAeH,UAAf,CADP;AAEhBC,oBAAQ,EAAEE;AAFM,WADX,CAAP;AAKD,SAnBD,CA/DK,EAmFL,uDAAG,4DAAH,EAA+B,UAACI,aAAD,EAAmB;AAChD,cAAIJ,YAAY,sBAAOI,aAAa,CAACN,QAAd,CAAuBxD,MAAvB,CAA8B,UAAAC,IAAI;AAAA,mBAAI,CAACA,IAAI,CAACC,SAAV;AAAA,WAAlC,CAAP,CAAhB;;AADgD,cAE1CqD,UAF0C,GAE3BO,aAF2B,CAE1CP,UAF0C;AAGhD,iBAAO,MAAP,OAAO,CAAP,kBACKO,aADL,CAAO,EACW;AAChB/D,iBAAK,EAAE0D,gBAAgB,CAACC,YAAD,EAAeH,UAAf,CADP;AAEhBC,oBAAQ,EAAEE;AAFM,WADX,CAAP;AAKD,SARD,CAnFK,EA4FLE,KA5FK,EA4FEC,MA5FF,CAAP;AA6FD;;AAEM,UAAMN,UAAU,GAAG,SAAbA,UAAa,CAACK,KAAD;AAAA,eAAwBA,KAAK,CAACL,UAA9B;AAAA,OAAnB;;AACA,UAAMxD,KAAK,GAAG,SAARA,KAAQ,CAAC6D,KAAD;AAAA,eAAwBA,KAAK,CAAC7D,KAA9B;AAAA,OAAd;;AACA,UAAMyD,QAAQ,GAAG,SAAXA,QAAW,CAACI,KAAD;AAAA,eAAwBA,KAAK,CAACJ,QAA9B;AAAA,OAAjB;;;;;;;;;;;;;;;;;AC3HP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,UAAMY,YAAY,GAAG,CACnB,oGADmB,EAEnB,4FAFmB,CAArB;;UAsBaC,W;;;;;cAAAA;;;;2BAAAA,W;AAAW,S;AAAA,mBAJX,CACT,oEADS,C;AAEV,kBARQ,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,wDAAYC,UAAZ,CAAuB,OAAvB,EAAgC,iEAAhC,CAJO,CAQR;;;;4HAEUD,W,EAAW;AAAA,yBArBtB,oGAqBsB,EApBtB,4FAoBsB;AApBJ,oBAWhB,4DAXgB,EAYhB,0DAZgB,EAahB,kEAbgB,EAaG,8DAbH,CAoBI;AAPD,oBAdrB,oGAcqB,EAbrB,4FAaqB;AAOC,S;AApBJ,O;;;;;wEAoBPA,W,EAAW;gBAjBvB,sDAiBuB;iBAjBd;AACR7C,wBAAY,YACP4C,YADO,CADJ;AAIRjF,mBAAO,YACFiF,YADE,CAJC;AAOR3C,mBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,wDAAY6C,UAAZ,CAAuB,OAAvB,EAAgC,iEAAhC,CAJO,CAPD;AAaR5C,qBAAS,EAAE,CACT,oEADS;AAbH,W;AAiBc,U;;;;;;;;;;;;;;;;;;AChCxB;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAM6C,WAAW,GAAG;AACzBlD,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBmD,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,OADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { TodosService } from './todos/services/todos.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit {\n  todoForm: FormGroup;\n  filters = this.todoService.filtersMode$;\n  leftTasks = [];\n  alltodos = [];\n  constructor(private todoService: TodosService) {\n\n  }\n\n\n  ngOnInit(): void {\n    this.todoForm = new FormGroup({\n      task: new FormControl('')\n    });\n\n    this.todoService.allTodos$.subscribe(todos => {\n      this.alltodos = todos;\n      this.leftTasks = todos.filter(todo => !todo.completed);\n    });\n  }\n\n  onEnteKey() {\n    const fieldvalue = this.todoForm.get('task').value;\n    if (fieldvalue) {\n      this.todoService.addTodo(fieldvalue);\n      this.todoForm.get('task').setValue('');\n    }\n  }\n\n  onClearCompleted() {\n    this.todoService.clearCompleted();\n  }\n\n  onChangeFilter(e, mode) {\n    this.todoService.changeFilterMode(mode);\n  }\n\n\n}\n","<main class=\"todoapp\">\n  <header class=\"header\">\n    <h1>todos</h1>\n    <form [formGroup]=\"todoForm\" role=\"form\" novalidate>\n      <input formControlName=\"task\" class=\"new-todo\" (keyup.enter)=\"onEnteKey()\" placeholder=\"What needs to be done\"\n        autofocus>\n    </form>\n  </header>\n  <section class=\"main\">\n    <app-complete-all></app-complete-all>\n    <app-todos-list></app-todos-list>\n  </section>\n  <footer class=\"footer\" *ngIf=\"alltodos.length\">\n    <span class=\"todo-count\">{{leftTasks.length}} items left</span>\n    <ul class=\"filters\">\n      <li>\n        <a href=\"#\" (click)=\"onChangeFilter($event, 'All')\" [ngClass]=\"{selected: (filters | async) === 'All'}\">All</a>\n      </li>\n      <li>\n        <a href=\"#\" (click)=\"onChangeFilter($event, 'Active')\"\n          [ngClass]=\"{selected: (filters | async) === 'Active'}\">Active</a>\n      </li>\n      <li>\n        <a href=\"#\" (click)=\"onChangeFilter($event, 'Completed')\"\n          [ngClass]=\"{selected: (filters | async) === 'Completed'}\">Completed</a>\n      </li>\n    </ul>\n    <button (click)=\"onClearCompleted()\" class=\"clear-completed\">Clear completed</button>\n  </footer>\n</main>\n<footer class=\"info\">\n  <p>Double-click to edit a todo</p>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { environment } from '@app/environments/environment';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { TodosModule } from './todos/todos.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    StoreModule.forRoot([], {\n      runtimeChecks: {\n        strictStateImmutability: false,\n        strictActionImmutability: false\n      }\n    }),\n    !environment.production ? StoreDevtoolsModule.instrument({\n      maxAge: 25,\n    }) : [],\n    TodosModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ChangeDetectorRef, ChangeDetectionStrategy, Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TodosService } from '@app/todos/services/todos.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-complete-all',\n  styleUrls: [\n    './complete-all.component.scss',\n  ],\n  templateUrl: './complete-all.component.html',\n})\nexport class CompleteAllComponent implements OnInit, OnDestroy {\n\n  multipleTodosExist = false;\n  subscription: Subscription;\n\n  constructor (\n    private changeDetectorRef: ChangeDetectorRef,\n    private todosService: TodosService,\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription = this.todosService.allTodos$.subscribe(todos => {\n      this.multipleTodosExist = todos && todos.length > 1;\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  toggleCompleteAll(): void {\n    this.todosService.toggleAllCompleted();\n  }\n\n}\n","<ng-container *ngIf=\"multipleTodosExist\">\n  <input id=\"toggle-all\" class=\"toggle-all\" type=\"checkbox\" (click)=\"toggleCompleteAll()\">\n  <label for=\"toggle-all\" class=\"toggle-all-label\" title=\"Mark all as complete\">Mark all as complete</label>\n</ng-container>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\nimport { TodosService } from '@app/todos/services/todos.service';\n\n@Component({\n  selector: 'app-todos-list',\n  styleUrls: [\n    './todo-list.component.scss',\n  ],\n  templateUrl: './todo-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TodosListComponent {\n  constructor(private todosService: TodosService) {\n\n  }\n\n  tasksList = this.todosService.todos$;\n\n  onCompleteTask(i) {\n    this.todosService.toggleComplete(i);\n  }\n\n  onUpdate(i, text) {\n    this.todosService.updateTodo(i, text);\n  }\n\n\n  onClear(i) {\n    this.todosService.removeTodo(i);\n  }\n\n  onEdit(i) {\n    this.todosService.editTodo(i);\n  }\n}\n","<ul class=\"todo-list\">\n  <li *ngFor=\"let task of tasksList | async; index as i\" [ngClass]=\"{completed: task.completed, editing: task.editing}\">\n    <div class=\"view\">\n      <input class=\"toggle\" (change)=\"onCompleteTask(task.id)\" [attr.checked]=\"task.completed\" type=\"checkbox\" />\n      <label (dblclick)=\"onEdit(task.id)\">{{task.text}}</label>\n      <button class=\"destroy\" (click)=\"onClear(task.id)\"></button>\n    </div>\n\n    <input type=\"text\" class=\"edit\" [(ngModel)]=\"task.text\" (keyup.enter)=\"onUpdate(task.id, task.text)\" />\n\n  </li>\n</ul>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\n\nimport { ITodo } from '../interfaces';\nimport { ITodosState } from '../state/todos.reducer';\nimport { FILTER_MODES } from '../constants/filter-modes';\nimport * as TodoActions from '../state/todo.actions';\nimport * as todoSelectors from '../state/todo.selectors';\n\n@Injectable()\nexport class TodosService {\n\n  todos$: Observable<ITodo[]>;\n  filtersMode$: Observable<FILTER_MODES>;\n  allTodos$: Observable<ITodo[]>;\n\n  constructor(\n    private store: Store<ITodosState>,\n  ) {\n    this.todos$ = this.store.select(todoSelectors.todos);\n    this.filtersMode$ = this.store.select(todoSelectors.filtersModes);\n    this.allTodos$ = this.store.select(todoSelectors.alltodos);\n  }\n\n  addTodo(text: string): void {\n    this.store.dispatch(TodoActions.addTodo({ text }));\n  }\n\n  removeTodo(id: number): void {\n    this.store.dispatch(TodoActions.removeTodo({ id }));\n  }\n\n  toggleComplete(id: number): void {\n    this.store.dispatch(TodoActions.toggleCompleted({ id }));\n  }\n\n  toggleAllCompleted(): void {\n    this.store.dispatch(TodoActions.toggleAllCompleted());\n  }\n\n  updateTodo(id: number, text: string): void {\n    this.store.dispatch(TodoActions.updateTodo({ id, text }));\n  }\n\n  editTodo(id: number): void {\n    this.store.dispatch(TodoActions.editTodo({ id }));\n  }\n\n  changeFilterMode(mode: FILTER_MODES): void {\n    this.store.dispatch(TodoActions.changeFilterMode({ mode }));\n  }\n\n  clearCompleted(): void {\n    this.store.dispatch(TodoActions.clearCompleted());\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { FILTER_MODES } from '../constants/filter-modes';\n\nexport const addTodo = createAction(\n  '[Todos] Add Todo',\n  props<{ text: string }>(),\n);\n\nexport const removeTodo = createAction(\n  '[Todos] Remove Todo',\n  props<{ id: number }>(),\n);\n\nexport const editTodo = createAction(\n  '[Todos] Edit Todo',\n  props<{ id: number }>(),\n);\n\nexport const updateTodo = createAction(\n  '[Todos] Update Todo',\n  props<{ id: number, text: string }>(),\n);\n\nexport const toggleCompleted = createAction(\n  '[Todos] Toggle Completed',\n  props<{ id: number }>(),\n);\n\nexport const toggleAllCompleted = createAction(\n  '[Todos] Toggle All Completed',\n);\n\nexport const changeFilterMode = createAction(\n  '[Todos] Change Filter Mode',\n  props<{ mode: FILTER_MODES }>(),\n);\n\nexport const clearCompleted = createAction(\n  '[Todos] Clear Completed',\n);\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\nimport * as todosState from './todos.reducer';\n\nexport const todosSelector = createFeatureSelector<todosState.ITodosState>('todos');\nexport const todos = createSelector(\n  todosSelector,\n  todosState.todos,\n);\n\n\nexport const alltodos = createSelector(\n  todosSelector,\n  todosState.allTodos,\n);\n\n\nexport const filtersModes = createSelector(\n  todosSelector,\n  todosState.filterMode\n);","import { Action, createReducer, on } from '@ngrx/store';\nimport * as TodoActions from './todo.actions';\n\nimport { FILTER_MODES } from './../constants/filter-modes';\nimport { ITodo } from '../interfaces/ITodo';\n\nexport interface ITodosState {\n  filterMode?: FILTER_MODES;\n  todos?: ITodo[];\n  allTodos?: ITodo[];\n}\n\nexport const initialState: ITodosState = {\n  filterMode: 'All',\n  todos: [],\n  allTodos: []\n};\n\n\nfunction getFilteredTodos(updatedTodos, filterMode) {\n  return filterMode === 'All' ? updatedTodos : filterMode === 'Active' ?\n    [...updatedTodos.filter(todo => !todo.completed)] :\n    [...updatedTodos.filter(todo => todo.completed)];\n}\n\nexport function todosReducer(state: ITodosState, action: Action) {\n  return createReducer(\n    initialState,\n    on(TodoActions.addTodo, (existingState, { text }) => {\n      let updatedTodos = [{ text, completed: false, id: new Date().getTime() }, ...existingState.allTodos];\n      let { filterMode } = existingState;\n\n      return {\n        ...existingState,\n        todos: getFilteredTodos(updatedTodos, filterMode),\n        allTodos: updatedTodos\n      };\n    }),\n\n\n    on(TodoActions.removeTodo, (existingState, { id }) => {\n      const updatedTodos = [...existingState.allTodos];\n      updatedTodos.forEach((task, i) => {\n        if (task.id === id) {\n          updatedTodos.splice(i, 1);\n        }\n      });\n      let { filterMode } = existingState;\n\n\n      return {\n        ...existingState,\n        todos: getFilteredTodos(updatedTodos, filterMode),\n        allTodos: updatedTodos\n      };\n    }),\n    on(TodoActions.changeFilterMode, (existingState, { mode }) => ({\n      ...existingState,\n      filterMode: mode,\n      todos: getFilteredTodos(existingState.allTodos, mode),\n    })),\n    on(TodoActions.toggleCompleted, (existingState, { id }) => {\n      let updatedTodos = [...existingState.allTodos];\n      updatedTodos.forEach((todo, i) => {\n        if (id === todo.id) {\n          todo.completed = !todo.completed;\n        }\n      });\n      let { filterMode } = existingState;\n      return {\n        ...existingState,\n        todos: getFilteredTodos(updatedTodos, filterMode),\n        allTodos: updatedTodos\n      };\n    }),\n    on(TodoActions.editTodo, (existingState, { id }) => {\n      let updatedTodos = [...existingState.allTodos];\n      updatedTodos.forEach((todo, i) => {\n        if (id === todo.id) {\n          todo.editing = true;\n        }\n      });\n      let { filterMode } = existingState;\n      return {\n        ...existingState,\n        todos: getFilteredTodos(updatedTodos, filterMode),\n        allTodos: updatedTodos\n      };\n    }),\n    on(TodoActions.updateTodo, (existingState, { id, text }) => {\n      let updatedTodos = [...existingState.allTodos];\n      updatedTodos.forEach((todo, i) => {\n        if (id === todo.id) {\n          if (text === '') {\n            updatedTodos.splice(i, 1);\n          } else {\n            todo.text = text;\n            todo.editing = false;\n          }\n        }\n      });\n      let { filterMode } = existingState;\n\n      return {\n        ...existingState,\n        todos: getFilteredTodos(updatedTodos, filterMode),\n        allTodos: updatedTodos\n      };\n    }),\n    on(TodoActions.clearCompleted, (existingState) => {\n      let updatedTodos = [...existingState.allTodos.filter(todo => !todo.completed)];\n      let { filterMode } = existingState;\n      return {\n        ...existingState,\n        todos: getFilteredTodos(updatedTodos, filterMode),\n        allTodos: updatedTodos\n      };\n    }),\n  )(state, action);\n}\n\nexport const filterMode = (state: ITodosState) => state.filterMode;\nexport const todos = (state: ITodosState) => state.todos;\nexport const allTodos = (state: ITodosState) => state.allTodos;\n","import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\n\nimport { CompleteAllComponent } from './components/complete-all/complete-all.component';\nimport { TodosListComponent } from './components/todo-list/todo-list.component';\nimport { TodosService } from './services/todos.service';\nimport { todosReducer } from './state/todos.reducer';\n\nconst DECLARATIONS = [\n  CompleteAllComponent,\n  TodosListComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...DECLARATIONS,\n  ],\n  exports: [\n    ...DECLARATIONS,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    StoreModule.forFeature('todos', todosReducer),\n  ],\n  providers: [\n    TodosService,\n  ],\n})\nexport class TodosModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}